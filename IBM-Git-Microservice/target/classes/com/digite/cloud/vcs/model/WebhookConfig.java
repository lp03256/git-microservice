// Generated by delombok at Fri Mar 17 17:12:13 IST 2023
package com.digite.cloud.vcs.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.*;
import org.springframework.data.annotation.*;
import org.springframework.data.mongodb.core.index.CompoundIndex;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.Document;
//import java.io.Serial;
import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

@Document(collection = "webhook_configs")
@CompoundIndex(name = "webhook_idx", def = "{\'realmId\': 1, \'accountId\': 1, \'projectId\': 1, \'category\': 1, \'app\': 1}", unique = true)
@JsonIgnoreProperties({"id", "createdAt", "lastModifiedAt", "version"})
public class WebhookConfig implements Serializable {
    /*@Serial
    private static final long serialVersionUID = -6899238845409003465L;*/
    @Id
    private String id;
    @CreatedDate
    private Date createdAt;
    @LastModifiedDate
    private Date lastModifiedAt;
    @Version
    private int version;
    @Indexed(unique = true)
    private String webhookId;
    private String realmId;
    private String accountId;
    private String projectId;
    private String authorId;
    private String authorName;
    private String category;
    private String app;
    private String tokenHeaderValue;
    private String tokenHeaderName;

    public WebhookConfig updateWebhookToken(String token) {
        this.tokenHeaderValue = token;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        WebhookConfig that = (WebhookConfig) o;
        return getWebhookId().equals(that.getWebhookId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getWebhookId());
    }


    @java.lang.SuppressWarnings("all")
    public static class WebhookConfigBuilder {
        @java.lang.SuppressWarnings("all")
        private String id;
        @java.lang.SuppressWarnings("all")
        private Date createdAt;
        @java.lang.SuppressWarnings("all")
        private Date lastModifiedAt;
        @java.lang.SuppressWarnings("all")
        private int version;
        @java.lang.SuppressWarnings("all")
        private String webhookId;
        @java.lang.SuppressWarnings("all")
        private String realmId;
        @java.lang.SuppressWarnings("all")
        private String accountId;
        @java.lang.SuppressWarnings("all")
        private String projectId;
        @java.lang.SuppressWarnings("all")
        private String authorId;
        @java.lang.SuppressWarnings("all")
        private String authorName;
        @java.lang.SuppressWarnings("all")
        private String category;
        @java.lang.SuppressWarnings("all")
        private String app;
        @java.lang.SuppressWarnings("all")
        private String tokenHeaderValue;
        @java.lang.SuppressWarnings("all")
        private String tokenHeaderName;

        @java.lang.SuppressWarnings("all")
        WebhookConfigBuilder() {
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder id(final String id) {
            this.id = id;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder createdAt(final Date createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder lastModifiedAt(final Date lastModifiedAt) {
            this.lastModifiedAt = lastModifiedAt;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder version(final int version) {
            this.version = version;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder webhookId(final String webhookId) {
            this.webhookId = webhookId;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder realmId(final String realmId) {
            this.realmId = realmId;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder accountId(final String accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder projectId(final String projectId) {
            this.projectId = projectId;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder authorId(final String authorId) {
            this.authorId = authorId;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder authorName(final String authorName) {
            this.authorName = authorName;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder category(final String category) {
            this.category = category;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder app(final String app) {
            this.app = app;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder tokenHeaderValue(final String tokenHeaderValue) {
            this.tokenHeaderValue = tokenHeaderValue;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public WebhookConfig.WebhookConfigBuilder tokenHeaderName(final String tokenHeaderName) {
            this.tokenHeaderName = tokenHeaderName;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public WebhookConfig build() {
            return new WebhookConfig(this.id, this.createdAt, this.lastModifiedAt, this.version, this.webhookId, this.realmId, this.accountId, this.projectId, this.authorId, this.authorName, this.category, this.app, this.tokenHeaderValue, this.tokenHeaderName);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "WebhookConfig.WebhookConfigBuilder(id=" + this.id + ", createdAt=" + this.createdAt + ", lastModifiedAt=" + this.lastModifiedAt + ", version=" + this.version + ", webhookId=" + this.webhookId + ", realmId=" + this.realmId + ", accountId=" + this.accountId + ", projectId=" + this.projectId + ", authorId=" + this.authorId + ", authorName=" + this.authorName + ", category=" + this.category + ", app=" + this.app + ", tokenHeaderValue=" + this.tokenHeaderValue + ", tokenHeaderName=" + this.tokenHeaderName + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    public static WebhookConfig.WebhookConfigBuilder builder() {
        return new WebhookConfig.WebhookConfigBuilder();
    }

    @java.lang.SuppressWarnings("all")
    public String getId() {
        return this.id;
    }

    @java.lang.SuppressWarnings("all")
    public Date getCreatedAt() {
        return this.createdAt;
    }

    @java.lang.SuppressWarnings("all")
    public Date getLastModifiedAt() {
        return this.lastModifiedAt;
    }

    @java.lang.SuppressWarnings("all")
    public int getVersion() {
        return this.version;
    }

    @java.lang.SuppressWarnings("all")
    public String getWebhookId() {
        return this.webhookId;
    }

    @java.lang.SuppressWarnings("all")
    public String getRealmId() {
        return this.realmId;
    }

    @java.lang.SuppressWarnings("all")
    public String getAccountId() {
        return this.accountId;
    }

    @java.lang.SuppressWarnings("all")
    public String getProjectId() {
        return this.projectId;
    }

    @java.lang.SuppressWarnings("all")
    public String getAuthorId() {
        return this.authorId;
    }

    @java.lang.SuppressWarnings("all")
    public String getAuthorName() {
        return this.authorName;
    }

    @java.lang.SuppressWarnings("all")
    public String getCategory() {
        return this.category;
    }

    @java.lang.SuppressWarnings("all")
    public String getApp() {
        return this.app;
    }

    @java.lang.SuppressWarnings("all")
    public String getTokenHeaderValue() {
        return this.tokenHeaderValue;
    }

    @java.lang.SuppressWarnings("all")
    public String getTokenHeaderName() {
        return this.tokenHeaderName;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "WebhookConfig(id=" + this.getId() + ", createdAt=" + this.getCreatedAt() + ", lastModifiedAt=" + this.getLastModifiedAt() + ", version=" + this.getVersion() + ", webhookId=" + this.getWebhookId() + ", realmId=" + this.getRealmId() + ", accountId=" + this.getAccountId() + ", projectId=" + this.getProjectId() + ", authorId=" + this.getAuthorId() + ", authorName=" + this.getAuthorName() + ", category=" + this.getCategory() + ", app=" + this.getApp() + ", tokenHeaderValue=" + this.getTokenHeaderValue() + ", tokenHeaderName=" + this.getTokenHeaderName() + ")";
    }

    @java.lang.SuppressWarnings("all")
    public WebhookConfig() {
    }

    @PersistenceCreator
    @java.lang.SuppressWarnings("all")
    public WebhookConfig(final String id, final Date createdAt, final Date lastModifiedAt, final int version, final String webhookId, final String realmId, final String accountId, final String projectId, final String authorId, final String authorName, final String category, final String app, final String tokenHeaderValue, final String tokenHeaderName) {
        this.id = id;
        this.createdAt = createdAt;
        this.lastModifiedAt = lastModifiedAt;
        this.version = version;
        this.webhookId = webhookId;
        this.realmId = realmId;
        this.accountId = accountId;
        this.projectId = projectId;
        this.authorId = authorId;
        this.authorName = authorName;
        this.category = category;
        this.app = app;
        this.tokenHeaderValue = tokenHeaderValue;
        this.tokenHeaderName = tokenHeaderName;
    }
}
